#!/bin/bash
#PBS -l select=1:ncpus=40:mem=20gb
#PBS -l walltime=240:00:00
#PBS -j oe
#PBS -q fthpc
#PBS -N xcompress
#PBS -J 0-251

#0PBS -J 0-251
#0PBS -J 252-503
#0PBS -J 504-755
#0PBS -J 756-1007
#0PBS -M ptriant@g.clemson.edu
#0PBS -m ae

module load gcc/4.8.1
module load mpich
module load python/3.4

cd $PBS_O_WORKDIR

# init arrays: stream_size in MB
stream_type_arr=(float double)
stream_size_arr=(1 4 8 16 32 64 128 256 512)
zfp_rate_arr=(4 8 16 32 64 128 256 512)
zfp_cache_size_arr=(0 1 2 4 8 16 32)

# get pos of each dimension using jobfile index
((x0= ${PBS_ARRAY_INDEX} % ${#stream_type_arr[@]}))

((x1= ${PBS_ARRAY_INDEX} / ${#stream_type_arr[@]}))
((x1= $x1 % ${#stream_size_arr[@]}))

((x2= ${PBS_ARRAY_INDEX} / ${#stream_type_arr[@]}))
((x2= $x2 / ${#stream_size_arr[@]}))
((x2= $x2 % ${#zfp_rate_arr[@]}))

((x3= ${PBS_ARRAY_INDEX} / ${#stream_type_arr[@]}))
((x3= $x3 / ${#stream_size_arr[@]}))
((x3= $x3 / ${#zfp_rate_arr[@]}))
((x3= $x3 % ${#zfp_cache_size_arr[@]}))

# init variables
stream_type=${stream_type_arr[$x0]}
((stream_size= ${stream_size_arr[$x1]} * 2**20))
zfp_rate=${zfp_rate_arr[$x2]}
zfp_cache_size=${zfp_cache_size_arr[$x3]}

# not useful for now
#if [ $stream_type == "float" ]; then num_bytes_per_val=4; else num_bytes_per_val=8; fi;

# make folder to write output to
output_folder=./test_results/STREAM/$stream_type/$stream_size/$zfp_rate/$zfp_cache_size
mkdir -p $output_folder

# copy source code to working directory
cp ./STREAM/stream.c $output_folder/
cp ./STREAM/stream_zfp.cpp $output_folder/

# move to source code folder
cd $output_folder

# compile compressed version and uncompressed version
MYFLAGS="-DSTREAM_TYPE=$stream_type -DSTREAM_ARRAY_SIZE=$stream_size -DRATE=$zfp_rate -DCSIZE=$zfp_cache_size"
INCFLAGS="-I/home/ptriant/Research/data_mgmt_runtime/zfp/include -I/home/ptriant/Research/data_mgmt_runtime/zfp/array"
LINKFLAGS="-L/home/ptriant/Research/data_mgmt_runtime/zfp/lib -lzfp"
gcc -O3 -mcmodel=large $MYFLAGS stream.c -o stream_c.exe
g++ -std=c++98 -w -O3 -mcmodel=large -fPIC -pedantic $INCFLAGS $MYFLAGS stream_zfp.cpp $LINKFLAGS -o stream_zfp_c.exe

./stream_c.exe > stream_output.txt
./stream_zfp_c.exe > zfp_output.txt


